# desafio-tecnico-veiculos-koprik-main/docker-compose.yml
name: vehicles-stack

services:
  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: vehicles
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -pdev --silent"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [appnet]

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks: [appnet]

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    working_dir: /var/www/html
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_URL: http://localhost:8000
      FRONTEND_URL: http://localhost:5173

      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: vehicles
      DB_USERNAME: dev
      DB_PASSWORD: dev

      CACHE_STORE: redis
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: database

      REDIS_HOST: redis
      REDIS_CLIENT: phpredis

      FILESYSTEM_DISK: public
    volumes:
      - ./apps/api:/var/www/html
      - api_storage:/var/www/html/storage
      - api_vendor:/var/www/html/vendor
    command: >
      sh -lc "
        composer install &&
        php artisan key:generate || true &&
        php artisan migrate --force &&
        php artisan storage:link || true &&
        php artisan serve --host=0.0.0.0 --port=8000
      "
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks: [appnet]

  web:
    build:
      context: ./apps/web
    working_dir: /usr/src/app
    environment:
      VITE_API_URL: http://localhost:8000/api
    volumes:
      - ./apps/web:/usr/src/app
      - /usr/src/app/node_modules
    command: >
      sh -lc "
        (npm ci || npm i) &&
        npm run dev -- --host 0.0.0.0 --port 5173
      "
    ports:
      - "5173:5173"
    depends_on:
      api:
        condition: service_started
    networks: [appnet]

volumes:
  db_mysql_data:
  api_storage:
  api_vendor:

networks:
  appnet:
